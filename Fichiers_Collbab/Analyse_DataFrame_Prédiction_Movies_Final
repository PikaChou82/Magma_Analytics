{"cells":[{"cell_type":"markdown","metadata":{"id":"AlbxUCmJZk7l"},"source":["# Import des Librairies & Fichiers nécessaires"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"background_save":true},"id":"jA_l49L4ZPID"},"outputs":[],"source":["# Import des librairies\n","\n","from sklearn.model_selection import train_test_split\n","from sklearn.linear_model import LinearRegression\n","import pandas as pd\n","import matplotlib.pyplot as plt\n","import seaborn as sns\n","import numpy as np\n","from scipy import stats\n","import folium\n","from sklearn.model_selection import learning_curve\n","import missingno as msno\n","from sklearn.preprocessing import StandardScaler\n","from sklearn.neighbors import NearestNeighbors\n","from sklearn.preprocessing import MinMaxScaler\n","from sklearn.decomposition import PCA\n","from sklearn.preprocessing import RobustScaler"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"background_save":true},"id":"3zZws9kHXz3L"},"outputs":[],"source":["# Lecture d'un fichier\n","\n","pd.set_option('display.max_colwidth', None)\n","link_dataset = \"https://raw.githubusercontent.com/PikaChou82/Magma_Analytics/refs/heads/main/Datasets/movies_final.csv\"\n","link_dataset2 = \"https://raw.githubusercontent.com/PikaChou82/Magma_Analytics/refs/heads/main/Datasets/actors.csv\"\n","data = pd.read_csv(link_dataset, sep =\",\")\n","data_actors = pd.read_csv(link_dataset2, sep =\",\")\n","data.head(1)"]},{"cell_type":"markdown","metadata":{"id":"Hu513ghCZuMc"},"source":["# Première lecture du fichier"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":300},"executionInfo":{"elapsed":18,"status":"ok","timestamp":1733502190563,"user":{"displayName":"Audrey Saussaye","userId":"13741928634988018064"},"user_tz":-60},"id":"VoyjrlsYZkYi","outputId":"41f71090-dd85-41da-af66-3e57725d0eeb"},"outputs":[{"data":{"application/vnd.google.colaboratory.intrinsic+json":{"summary":"{\n  \"name\": \"data\",\n  \"rows\": 8,\n  \"fields\": [\n    {\n      \"column\": \"budget\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 203611994.0142108,\n        \"min\": 0.0,\n        \"max\": 579330426.0,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          5605570.219734178,\n          579330426.0,\n          20908244.905605834\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"revenue\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1029306443.4984779,\n        \"min\": 0.0,\n        \"max\": 2923706026.0,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          15028715.131677568,\n          2923706026.0,\n          78746467.59261777\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"popularity\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 15033.268641626004,\n        \"min\": 0.6,\n        \"max\": 42961.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          9.174774725914203,\n          3.801,\n          42961.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"isAdult\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 15188.954856581606,\n        \"min\": 0.0,\n        \"max\": 42961.0,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          0.001256953981518121,\n          1.0,\n          0.03543167043951932\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"startYear\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 14599.009701861696,\n        \"min\": 18.805683013054114,\n        \"max\": 42961.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          1999.264891413142,\n          2004.0,\n          42961.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"runtimeMinutes\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 19888.56137170859,\n        \"min\": 85.0,\n        \"max\": 43200.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          104.7464444496171,\n          99.0,\n          42961.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"averageRating\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 15091.71222570682,\n        \"min\": 1.1046997399024063,\n        \"max\": 42691.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          6.04306294066665,\n          6.2,\n          42691.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"numVotes\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1039110.434212712,\n        \"min\": 5.0,\n        \"max\": 2962241.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          23784.37366189595,\n          1468.0,\n          42691.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"note_ponderee\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 9691064.209435279,\n        \"min\": 20.7,\n        \"max\": 27548841.3,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          168265.2920545314,\n          8481.0,\n          42691.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"note_ponderee_nette\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 15093.024903978334,\n        \"min\": 3.521020636582164e-06,\n        \"max\": 42691.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          0.061074931393559476,\n          0.0030745407001908,\n          42691.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"decade\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 14600.108515729271,\n        \"min\": 19.02119652644761,\n        \"max\": 42961.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          1994.877679756058,\n          2000.0,\n          42961.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}","type":"dataframe"},"text/html":["\n","  <div id=\"df-fab23c8e-638e-4254-b6c9-745413b056b8\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>budget</th>\n","      <th>revenue</th>\n","      <th>popularity</th>\n","      <th>isAdult</th>\n","      <th>startYear</th>\n","      <th>runtimeMinutes</th>\n","      <th>averageRating</th>\n","      <th>numVotes</th>\n","      <th>note_ponderee</th>\n","      <th>note_ponderee_nette</th>\n","      <th>decade</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>count</th>\n","      <td>4.296100e+04</td>\n","      <td>4.296100e+04</td>\n","      <td>42961.000000</td>\n","      <td>42961.000000</td>\n","      <td>42961.000000</td>\n","      <td>42961.000000</td>\n","      <td>42691.000000</td>\n","      <td>4.269100e+04</td>\n","      <td>4.269100e+04</td>\n","      <td>42691.000000</td>\n","      <td>42961.000000</td>\n","    </tr>\n","    <tr>\n","      <th>mean</th>\n","      <td>5.605570e+06</td>\n","      <td>1.502872e+07</td>\n","      <td>9.174775</td>\n","      <td>0.001257</td>\n","      <td>1999.264891</td>\n","      <td>104.746444</td>\n","      <td>6.043063</td>\n","      <td>2.378437e+04</td>\n","      <td>1.682653e+05</td>\n","      <td>0.061075</td>\n","      <td>1994.877680</td>\n","    </tr>\n","    <tr>\n","      <th>std</th>\n","      <td>2.090824e+07</td>\n","      <td>7.874647e+07</td>\n","      <td>55.154643</td>\n","      <td>0.035432</td>\n","      <td>18.805683</td>\n","      <td>208.858698</td>\n","      <td>1.104700</td>\n","      <td>9.623337e+04</td>\n","      <td>7.652861e+05</td>\n","      <td>0.277793</td>\n","      <td>19.021197</td>\n","    </tr>\n","    <tr>\n","      <th>min</th>\n","      <td>0.000000e+00</td>\n","      <td>0.000000e+00</td>\n","      <td>0.600000</td>\n","      <td>0.000000</td>\n","      <td>1960.000000</td>\n","      <td>85.000000</td>\n","      <td>1.200000</td>\n","      <td>5.000000e+00</td>\n","      <td>2.070000e+01</td>\n","      <td>0.000004</td>\n","      <td>1960.000000</td>\n","    </tr>\n","    <tr>\n","      <th>25%</th>\n","      <td>0.000000e+00</td>\n","      <td>0.000000e+00</td>\n","      <td>1.467000</td>\n","      <td>0.000000</td>\n","      <td>1984.000000</td>\n","      <td>92.000000</td>\n","      <td>5.400000</td>\n","      <td>3.330000e+02</td>\n","      <td>1.829550e+03</td>\n","      <td>0.000660</td>\n","      <td>1980.000000</td>\n","    </tr>\n","    <tr>\n","      <th>50%</th>\n","      <td>0.000000e+00</td>\n","      <td>0.000000e+00</td>\n","      <td>3.801000</td>\n","      <td>0.000000</td>\n","      <td>2004.000000</td>\n","      <td>99.000000</td>\n","      <td>6.200000</td>\n","      <td>1.468000e+03</td>\n","      <td>8.481000e+03</td>\n","      <td>0.003075</td>\n","      <td>2000.000000</td>\n","    </tr>\n","    <tr>\n","      <th>75%</th>\n","      <td>0.000000e+00</td>\n","      <td>0.000000e+00</td>\n","      <td>9.021000</td>\n","      <td>0.000000</td>\n","      <td>2016.000000</td>\n","      <td>110.000000</td>\n","      <td>6.800000</td>\n","      <td>7.996000e+03</td>\n","      <td>4.988775e+04</td>\n","      <td>0.018105</td>\n","      <td>2010.000000</td>\n","    </tr>\n","    <tr>\n","      <th>max</th>\n","      <td>5.793304e+08</td>\n","      <td>2.923706e+09</td>\n","      <td>5089.969000</td>\n","      <td>1.000000</td>\n","      <td>2025.000000</td>\n","      <td>43200.000000</td>\n","      <td>9.600000</td>\n","      <td>2.962241e+06</td>\n","      <td>2.754884e+07</td>\n","      <td>10.000000</td>\n","      <td>2020.000000</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-fab23c8e-638e-4254-b6c9-745413b056b8')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-fab23c8e-638e-4254-b6c9-745413b056b8 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-fab23c8e-638e-4254-b6c9-745413b056b8');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-8e251290-a6f3-4b14-a079-756be98e8800\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-8e251290-a6f3-4b14-a079-756be98e8800')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-8e251290-a6f3-4b14-a079-756be98e8800 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"text/plain":["             budget       revenue    popularity       isAdult     startYear  \\\n","count  4.296100e+04  4.296100e+04  42961.000000  42961.000000  42961.000000   \n","mean   5.605570e+06  1.502872e+07      9.174775      0.001257   1999.264891   \n","std    2.090824e+07  7.874647e+07     55.154643      0.035432     18.805683   \n","min    0.000000e+00  0.000000e+00      0.600000      0.000000   1960.000000   \n","25%    0.000000e+00  0.000000e+00      1.467000      0.000000   1984.000000   \n","50%    0.000000e+00  0.000000e+00      3.801000      0.000000   2004.000000   \n","75%    0.000000e+00  0.000000e+00      9.021000      0.000000   2016.000000   \n","max    5.793304e+08  2.923706e+09   5089.969000      1.000000   2025.000000   \n","\n","       runtimeMinutes  averageRating      numVotes  note_ponderee  \\\n","count    42961.000000   42691.000000  4.269100e+04   4.269100e+04   \n","mean       104.746444       6.043063  2.378437e+04   1.682653e+05   \n","std        208.858698       1.104700  9.623337e+04   7.652861e+05   \n","min         85.000000       1.200000  5.000000e+00   2.070000e+01   \n","25%         92.000000       5.400000  3.330000e+02   1.829550e+03   \n","50%         99.000000       6.200000  1.468000e+03   8.481000e+03   \n","75%        110.000000       6.800000  7.996000e+03   4.988775e+04   \n","max      43200.000000       9.600000  2.962241e+06   2.754884e+07   \n","\n","       note_ponderee_nette        decade  \n","count         42691.000000  42961.000000  \n","mean              0.061075   1994.877680  \n","std               0.277793     19.021197  \n","min               0.000004   1960.000000  \n","25%               0.000660   1980.000000  \n","50%               0.003075   2000.000000  \n","75%               0.018105   2010.000000  \n","max              10.000000   2020.000000  "]},"execution_count":4,"metadata":{},"output_type":"execute_result"}],"source":["# Statistiques du fichier\n","\n","data.describe()"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":18,"status":"ok","timestamp":1733502190565,"user":{"displayName":"Audrey Saussaye","userId":"13741928634988018064"},"user_tz":-60},"id":"x1lpw7SuqkVG","outputId":"92ac02d9-a94c-4ac4-8251-53b958e56fe5"},"outputs":[{"name":"stdout","output_type":"stream","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 42961 entries, 0 to 42960\n","Data columns (total 27 columns):\n"," #   Column                     Non-Null Count  Dtype  \n","---  ------                     --------------  -----  \n"," 0   budget                     42961 non-null  int64  \n"," 1   revenue                    42961 non-null  int64  \n"," 2   production_companies_name  42961 non-null  object \n"," 3   production_countries       42961 non-null  object \n"," 4   homepage                   8024 non-null   object \n"," 5   imdb_id                    42961 non-null  object \n"," 6   overview                   41997 non-null  object \n"," 7   popularity                 42961 non-null  float64\n"," 8   poster_path                41946 non-null  object \n"," 9   spoken_languages           42961 non-null  object \n"," 10  video                      42961 non-null  bool   \n"," 11  titleId                    42961 non-null  object \n"," 12  title                      42961 non-null  object \n"," 13  language                   42961 non-null  object \n"," 14  primaryTitle               42961 non-null  object \n"," 15  isAdult                    42961 non-null  float64\n"," 16  startYear                  42961 non-null  int64  \n"," 17  endYear                    42961 non-null  object \n"," 18  runtimeMinutes             42961 non-null  int64  \n"," 19  genres                     42961 non-null  object \n"," 20  directors                  42957 non-null  object \n"," 21  writers                    42957 non-null  object \n"," 22  averageRating              42691 non-null  float64\n"," 23  numVotes                   42691 non-null  float64\n"," 24  note_ponderee              42691 non-null  float64\n"," 25  note_ponderee_nette        42691 non-null  float64\n"," 26  decade                     42961 non-null  int64  \n","dtypes: bool(1), float64(6), int64(5), object(15)\n","memory usage: 8.6+ MB\n"]}],"source":[" # Informations sur les champs\n","\n"," data.info()"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":15,"status":"ok","timestamp":1733502190565,"user":{"displayName":"Audrey Saussaye","userId":"13741928634988018064"},"user_tz":-60},"id":"Nbaj06pVbTZd","outputId":"5ec21685-f8ad-459c-d181-c068727311e4"},"outputs":[{"data":{"text/plain":["(42961, 27)"]},"execution_count":6,"metadata":{},"output_type":"execute_result"}],"source":["# Information sur les lignes et colonnes\n","\n","data.shape"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":931},"executionInfo":{"elapsed":720,"status":"ok","timestamp":1733502191275,"user":{"displayName":"Audrey Saussaye","userId":"13741928634988018064"},"user_tz":-60},"id":"ldi4eKHCafbO","outputId":"84d10dc0-cf90-464d-9d26-f49b8ec3c18a"},"outputs":[{"data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>0</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>budget</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>revenue</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>production_companies_name</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>production_countries</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>homepage</th>\n","      <td>34937</td>\n","    </tr>\n","    <tr>\n","      <th>imdb_id</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>overview</th>\n","      <td>964</td>\n","    </tr>\n","    <tr>\n","      <th>popularity</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>poster_path</th>\n","      <td>1015</td>\n","    </tr>\n","    <tr>\n","      <th>spoken_languages</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>video</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>titleId</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>title</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>language</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>primaryTitle</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>isAdult</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>startYear</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>endYear</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>runtimeMinutes</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>genres</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>directors</th>\n","      <td>4</td>\n","    </tr>\n","    <tr>\n","      <th>writers</th>\n","      <td>4</td>\n","    </tr>\n","    <tr>\n","      <th>averageRating</th>\n","      <td>270</td>\n","    </tr>\n","    <tr>\n","      <th>numVotes</th>\n","      <td>270</td>\n","    </tr>\n","    <tr>\n","      <th>note_ponderee</th>\n","      <td>270</td>\n","    </tr>\n","    <tr>\n","      <th>note_ponderee_nette</th>\n","      <td>270</td>\n","    </tr>\n","    <tr>\n","      <th>decade</th>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div><br><label><b>dtype:</b> int64</label>"],"text/plain":["budget                           0\n","revenue                          0\n","production_companies_name        0\n","production_countries             0\n","homepage                     34937\n","imdb_id                          0\n","overview                       964\n","popularity                       0\n","poster_path                   1015\n","spoken_languages                 0\n","video                            0\n","titleId                          0\n","title                            0\n","language                         0\n","primaryTitle                     0\n","isAdult                          0\n","startYear                        0\n","endYear                          0\n","runtimeMinutes                   0\n","genres                           0\n","directors                        4\n","writers                          4\n","averageRating                  270\n","numVotes                       270\n","note_ponderee                  270\n","note_ponderee_nette            270\n","decade                           0\n","dtype: int64"]},"execution_count":7,"metadata":{},"output_type":"execute_result"}],"source":["# Valeurs manquantes\n","\n","data.isnull().sum()"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":210},"executionInfo":{"elapsed":35,"status":"ok","timestamp":1733502191276,"user":{"displayName":"Audrey Saussaye","userId":"13741928634988018064"},"user_tz":-60},"id":"m8XAwHSsay0U","outputId":"9ea99bd2-66b2-48b1-9ef5-f87bbc692d29"},"outputs":[{"data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>title</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>9013</th>\n","      <td>French Touch: Desires</td>\n","    </tr>\n","    <tr>\n","      <th>9246</th>\n","      <td>La Bûche de Noël du château d'Arendelle: Joyeuses Fêtes!</td>\n","    </tr>\n","    <tr>\n","      <th>12194</th>\n","      <td>La Bûche de Noël du château d'Arendelle</td>\n","    </tr>\n","    <tr>\n","      <th>12903</th>\n","      <td>French Touch: Girls on Fire</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div><br><label><b>dtype:</b> object</label>"],"text/plain":["9013                                        French Touch: Desires\n","9246     La Bûche de Noël du château d'Arendelle: Joyeuses Fêtes!\n","12194                     La Bûche de Noël du château d'Arendelle\n","12903                                 French Touch: Girls on Fire\n","Name: title, dtype: object"]},"execution_count":8,"metadata":{},"output_type":"execute_result"}],"source":["# On a peu de lignes vides pertinentes (homepage, poster on peut faire sans).\n","# Pour les notes, nous n'allons pas classer des films en fonction de leur note. Pas de travail sur les valeurs manquantes à ce stade.\n","# Validons les directeurs & écrivains\n","\n","data[data['directors'].isna()]['title']"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"409zw3yYzZM1"},"outputs":[],"source":["# On peut faire sans...\n","\n","data = data.dropna(subset=['directors'])"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":931},"executionInfo":{"elapsed":31,"status":"ok","timestamp":1733502191276,"user":{"displayName":"Audrey Saussaye","userId":"13741928634988018064"},"user_tz":-60},"id":"vGSWr8E-zzIN","outputId":"7969af15-12eb-42b9-9962-20e6a440a9d7"},"outputs":[{"data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>0</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>budget</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>revenue</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>production_companies_name</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>production_countries</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>homepage</th>\n","      <td>34935</td>\n","    </tr>\n","    <tr>\n","      <th>imdb_id</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>overview</th>\n","      <td>964</td>\n","    </tr>\n","    <tr>\n","      <th>popularity</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>poster_path</th>\n","      <td>1015</td>\n","    </tr>\n","    <tr>\n","      <th>spoken_languages</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>video</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>titleId</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>title</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>language</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>primaryTitle</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>isAdult</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>startYear</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>endYear</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>runtimeMinutes</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>genres</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>directors</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>writers</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>averageRating</th>\n","      <td>270</td>\n","    </tr>\n","    <tr>\n","      <th>numVotes</th>\n","      <td>270</td>\n","    </tr>\n","    <tr>\n","      <th>note_ponderee</th>\n","      <td>270</td>\n","    </tr>\n","    <tr>\n","      <th>note_ponderee_nette</th>\n","      <td>270</td>\n","    </tr>\n","    <tr>\n","      <th>decade</th>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div><br><label><b>dtype:</b> int64</label>"],"text/plain":["budget                           0\n","revenue                          0\n","production_companies_name        0\n","production_countries             0\n","homepage                     34935\n","imdb_id                          0\n","overview                       964\n","popularity                       0\n","poster_path                   1015\n","spoken_languages                 0\n","video                            0\n","titleId                          0\n","title                            0\n","language                         0\n","primaryTitle                     0\n","isAdult                          0\n","startYear                        0\n","endYear                          0\n","runtimeMinutes                   0\n","genres                           0\n","directors                        0\n","writers                          0\n","averageRating                  270\n","numVotes                       270\n","note_ponderee                  270\n","note_ponderee_nette            270\n","decade                           0\n","dtype: int64"]},"execution_count":10,"metadata":{},"output_type":"execute_result"}],"source":["# Vérification\n","\n","data.isna().sum()"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":29,"status":"ok","timestamp":1733502191277,"user":{"displayName":"Audrey Saussaye","userId":"13741928634988018064"},"user_tz":-60},"id":"k7yzGtd4bYOM","outputId":"f211d4ff-5717-47f8-d194-a0493f768ab8"},"outputs":[{"name":"stdout","output_type":"stream","text":["Data total : (42957, 27)\n","Data sans doublon : (42957, 27)\n"]}],"source":["# Validation des doublons\n","\n","print(f\"Data total : {data.shape}\")\n","print(f\"Data sans doublon : {data.drop_duplicates().shape}\")"]},{"cell_type":"markdown","metadata":{"id":"UigcA9HZZ3Ga"},"source":["# Choix des colonnes pour poursuivre l'analyse"]},{"cell_type":"markdown","metadata":{"id":"sRXgk9wQcn60"},"source":["**Pour évaluer la catégorie :**\n","\n","- budget\n","- revenue\n","- production_companies_name\n","- production_countries\n","- homepage **non**\n","- imdb_id **non**\n","- overview **non**\n","- popularity\n","- poster_path\t**non**\n","- spoken_languages\n","- video **non**\n","- titleId\t**non**\n","- title\t**non**\n","- language **non**\n","- primaryTitle **non**\n","- isAdult\n","- startYear\n","- endYear\t**non**\n","- runtimeMinutes\n","- genres\n","- directors\n","- writers\n","- averageRating\t**non**\n","- numVotes **non**\n","- note_ponderee\t**non**\n","- note_ponderee_nette **non**\n","- decade"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":490},"executionInfo":{"elapsed":24,"status":"ok","timestamp":1733502191277,"user":{"displayName":"Audrey Saussaye","userId":"13741928634988018064"},"user_tz":-60},"id":"xr5rmohWvgb8","outputId":"64c81113-a687-4749-d549-fa4920a3733a"},"outputs":[{"data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>count</th>\n","    </tr>\n","    <tr>\n","      <th>production_companies_name</th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>[]</th>\n","      <td>5371</td>\n","    </tr>\n","    <tr>\n","      <th>['Paramount']</th>\n","      <td>190</td>\n","    </tr>\n","    <tr>\n","      <th>['Universal Pictures']</th>\n","      <td>168</td>\n","    </tr>\n","    <tr>\n","      <th>['Metro-Goldwyn-Mayer']</th>\n","      <td>144</td>\n","    </tr>\n","    <tr>\n","      <th>['20th Century Fox']</th>\n","      <td>135</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>['Quad Films', 'TF1 Studio', 'France 3 Cinéma', 'Jouror Productions', 'Section 9', 'Mitico']</th>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>['BA Entertainment', 'Saram Entertainment', 'Plus M Entertainment', 'ABO Entertainment']</th>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>['iFilm', 'Tori Pictures', 'CJ CGV']</th>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>['3B Productions', 'SCOPE Pictures', 'Red Balloon Film', 'Tea Time Film', 'Ascent Film', 'BR', 'RAI Cinema', 'Ciné+', 'ARTE France Cinéma', 'ARTE']</th>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>['Blaad Studio', 'CJ Entertainment', 'CJ ENM', 'CJ ENM Studios']</th>\n","      <td>1</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>30549 rows × 1 columns</p>\n","</div><br><label><b>dtype:</b> int64</label>"],"text/plain":["production_companies_name\n","[]                                                                                                                                                     5371\n","['Paramount']                                                                                                                                           190\n","['Universal Pictures']                                                                                                                                  168\n","['Metro-Goldwyn-Mayer']                                                                                                                                 144\n","['20th Century Fox']                                                                                                                                    135\n","                                                                                                                                                       ... \n","['Quad Films', 'TF1 Studio', 'France 3 Cinéma', 'Jouror Productions', 'Section 9', 'Mitico']                                                              1\n","['BA Entertainment', 'Saram Entertainment', 'Plus M Entertainment', 'ABO Entertainment']                                                                  1\n","['iFilm', 'Tori Pictures', 'CJ CGV']                                                                                                                      1\n","['3B Productions', 'SCOPE Pictures', 'Red Balloon Film', 'Tea Time Film', 'Ascent Film', 'BR', 'RAI Cinema', 'Ciné+', 'ARTE France Cinéma', 'ARTE']       1\n","['Blaad Studio', 'CJ Entertainment', 'CJ ENM', 'CJ ENM Studios']                                                                                          1\n","Name: count, Length: 30549, dtype: int64"]},"execution_count":12,"metadata":{},"output_type":"execute_result"}],"source":["# Analyse de la colonne 'production_companies_name'\n","\n","data['production_companies_name'].value_counts()"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"y91ZMnKY0Vft"},"outputs":[],"source":["# On ne gadera pas les infos sur les boîtes de production"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":490},"executionInfo":{"elapsed":21,"status":"ok","timestamp":1733502191277,"user":{"displayName":"Audrey Saussaye","userId":"13741928634988018064"},"user_tz":-60},"id":"2gFQhNQA0K2M","outputId":"accfd96c-dcf7-4f57-d49b-fed158e2050d"},"outputs":[{"data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>count</th>\n","    </tr>\n","    <tr>\n","      <th>production_countries</th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>['US']</th>\n","      <td>11693</td>\n","    </tr>\n","    <tr>\n","      <th>['FR']</th>\n","      <td>4188</td>\n","    </tr>\n","    <tr>\n","      <th>[]</th>\n","      <td>2474</td>\n","    </tr>\n","    <tr>\n","      <th>['IT']</th>\n","      <td>1650</td>\n","    </tr>\n","    <tr>\n","      <th>['GB']</th>\n","      <td>1619</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>['CA', 'CN', 'HK', 'US']</th>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>['AU', 'BE']</th>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>['LV', 'RU']</th>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>['GB', 'DE', 'DK', 'CA', 'US', 'FR', 'SE']</th>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>['IL', 'KZ', 'PL', 'RU']</th>\n","      <td>1</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>3424 rows × 1 columns</p>\n","</div><br><label><b>dtype:</b> int64</label>"],"text/plain":["production_countries\n","['US']                                        11693\n","['FR']                                         4188\n","[]                                             2474\n","['IT']                                         1650\n","['GB']                                         1619\n","                                              ...  \n","['CA', 'CN', 'HK', 'US']                          1\n","['AU', 'BE']                                      1\n","['LV', 'RU']                                      1\n","['GB', 'DE', 'DK', 'CA', 'US', 'FR', 'SE']        1\n","['IL', 'KZ', 'PL', 'RU']                          1\n","Name: count, Length: 3424, dtype: int64"]},"execution_count":14,"metadata":{},"output_type":"execute_result"}],"source":["# Analyse de la colonne 'production_countries'\n","\n","data['production_countries'].value_counts()"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":490},"executionInfo":{"elapsed":4250,"status":"ok","timestamp":1733502195508,"user":{"displayName":"Audrey Saussaye","userId":"13741928634988018064"},"user_tz":-60},"id":"20dtTkOV2-Gk","outputId":"1b047dda-8823-47bd-c485-db5b669b1ea2"},"outputs":[{"data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>count</th>\n","    </tr>\n","    <tr>\n","      <th>autre_prod_countries</th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>['US']</th>\n","      <td>11693</td>\n","    </tr>\n","    <tr>\n","      <th>autre</th>\n","      <td>4852</td>\n","    </tr>\n","    <tr>\n","      <th>['FR']</th>\n","      <td>4188</td>\n","    </tr>\n","    <tr>\n","      <th>[]</th>\n","      <td>2474</td>\n","    </tr>\n","    <tr>\n","      <th>['IT']</th>\n","      <td>1650</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>['AT', 'FR', 'DE']</th>\n","      <td>10</td>\n","    </tr>\n","    <tr>\n","      <th>['US', 'AU']</th>\n","      <td>10</td>\n","    </tr>\n","    <tr>\n","      <th>['VE']</th>\n","      <td>10</td>\n","    </tr>\n","    <tr>\n","      <th>['AE', 'US']</th>\n","      <td>10</td>\n","    </tr>\n","    <tr>\n","      <th>['BE', 'DE']</th>\n","      <td>10</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>203 rows × 1 columns</p>\n","</div><br><label><b>dtype:</b> int64</label>"],"text/plain":["autre_prod_countries\n","['US']                11693\n","autre                  4852\n","['FR']                 4188\n","[]                     2474\n","['IT']                 1650\n","                      ...  \n","['AT', 'FR', 'DE']       10\n","['US', 'AU']             10\n","['VE']                   10\n","['AE', 'US']             10\n","['BE', 'DE']             10\n","Name: count, Length: 203, dtype: int64"]},"execution_count":15,"metadata":{},"output_type":"execute_result"}],"source":["# Identifier les valeurs apparaissant moins de 10 fois\n","\n","value_counts = data['production_countries'].value_counts()\n","rare_values = value_counts[value_counts < 10].index\n","\n","# Remplacer les valeurs rares par \"autre\"\n","data['autre_prod_countries'] = data['production_countries'].replace(rare_values, 'autre')\n","data['autre_prod_countries'].value_counts()"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":550},"executionInfo":{"elapsed":1523,"status":"ok","timestamp":1733502197027,"user":{"displayName":"Audrey Saussaye","userId":"13741928634988018064"},"user_tz":-60},"id":"wetRfccH1Vki","outputId":"70497025-62fa-4e69-8c81-210854f90e26"},"outputs":[{"name":"stdout","output_type":"stream","text":["Médiane des fréquences : 26.0\n","Premier quartile : 14.0\n","Troisième quartile : 78.0\n"]},{"data":{"image/png":"\n","text/plain":["<Figure size 640x480 with 1 Axes>"]},"metadata":{},"output_type":"display_data"}],"source":["# Beaucoup de pays de production, on va se concentrer sur des valeurs qui reviennent souvent et isoler le reste en autre\n","\n","value_counts = data['autre_prod_countries'].value_counts()\n","median_frequency = value_counts.median()\n","q1 = value_counts.quantile(0.25)\n","q3 = value_counts.quantile(0.75)\n","\n","print(\"Médiane des fréquences :\", median_frequency)\n","print(\"Premier quartile :\", q1)\n","print(\"Troisième quartile :\", q3)\n","\n","# Visualisation\n","\n","plt.hist(data['autre_prod_countries'], bins=10)\n","plt.ylabel(\"Nombre de pays\", size = 10, c = '#5D615B', fontweight = 'bold') ## personnalisation axe y\n","plt.xlabel(\"Fréquence d'apparition\", size = 10, c = '#5D615B', fontweight = 'bold') ## personnalisation axe x\n","plt.suptitle(\"Distribution des fréquences des pays\", size = 20, fontweight = 'bold',color='darkblue')\n","plt.show()"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":480},"executionInfo":{"elapsed":1087,"status":"ok","timestamp":1733502198107,"user":{"displayName":"Audrey Saussaye","userId":"13741928634988018064"},"user_tz":-60},"id":"_9Jyb_F5v1R_","outputId":"00898882-704a-4c60-a7b3-9ce8a8575585"},"outputs":[{"data":{"image/png":"\n","text/plain":["<Figure size 2000x500 with 2 Axes>"]},"metadata":{},"output_type":"display_data"}],"source":["# Création d'un scatterplot pour valider certaines infos budget et genre\n","\n","fig_, (ax1, ax2) = plt.subplots(1, 2, figsize=(20, 5))\n","plt.suptitle(\"Correlation sur les budgets et genres\", size = 20, fontweight = 'bold',color='darkblue')\n","plt.subplots_adjust(top=0.8) ## permet de décaler les graphiqes\n","ax = plt.gca() ## pour travailler sur les axes\n","ax1.spines['top'].set_visible(False) ## enlève le cadre haut\n","ax1.spines['right'].set_visible(False) ## enlève le cadre droit\n","ax2.spines['top'].set_visible(False) ## enlève le cadre haut\n","ax2.spines['right'].set_visible(False) ## enlève le cadre droit\n","ax1 = plt.subplot(121)\n","sns.scatterplot(data = data, x ='genres', y='budget')\n","plt.title(\"Répartition des budgets vs genres\", color = \"darkblue\", fontweight = 'bold', size = 16) ## personnalisation du titre\n","plt.ylabel(\"Prix\", size = 10, c = '#5D615B', fontweight = 'bold') ## personnalisation axe y\n","plt.xlabel(\"genres\", size = 10, c = '#5D615B', fontweight = 'bold') ## personnalisation axe x\n","ax2 = plt.subplot(122)\n","sns.scatterplot(data = data, x ='budget', y='revenue')\n","plt.title(\"Répartition des revenues vs budget\", color = \"darkblue\", fontweight = 'bold', size = 16) ## personnalisation du titre\n","plt.ylabel(\"budget\", size = 10, c = '#5D615B', fontweight = 'bold') ## personnalisation axe y\n","plt.xlabel(\"revenue\", size = 10, c = '#5D615B', fontweight = 'bold') ## personnalisation axe x\n","plt.show()"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"T5uyhmPkwzRo"},"outputs":[],"source":["# Beaucoup de budget & revenue à 0, on ne prend pas les colonnes bugdet et revenue"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"vCOg_PHHIeZk"},"outputs":[],"source":["data = data[data['averageRating']>6]"]},{"cell_type":"markdown","metadata":{"id":"rTObpdJw6WlD"},"source":["# Entrainement du modèle"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"executionInfo":{"elapsed":26,"status":"ok","timestamp":1733502198109,"user":{"displayName":"Audrey Saussaye","userId":"13741928634988018064"},"user_tz":-60},"id":"dTOr2wBBVkp0","outputId":"ea2c03fe-eddc-41e1-ae24-f513b6a93a00"},"outputs":[{"data":{"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"data_actors"},"text/html":["\n","  <div id=\"df-e8fd67ae-7c62-492b-9e03-eff2d90e3874\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>nconst</th>\n","      <th>primaryName</th>\n","      <th>birthYear</th>\n","      <th>deathYear</th>\n","      <th>knownForTitles</th>\n","      <th>tconst</th>\n","      <th>ordering</th>\n","      <th>category</th>\n","      <th>characters</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>nm0000001</td>\n","      <td>Fred Astaire</td>\n","      <td>1899</td>\n","      <td>1987</td>\n","      <td>tt0050419,tt0072308,tt0053137,tt0027125</td>\n","      <td>tt0055307</td>\n","      <td>1.0</td>\n","      <td>actor</td>\n","      <td>[\"Biddeford 'Pogo' Poole\"]</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>nm0000001</td>\n","      <td>Fred Astaire</td>\n","      <td>1899</td>\n","      <td>1987</td>\n","      <td>tt0050419,tt0072308,tt0053137,tt0027125</td>\n","      <td>tt0056289</td>\n","      <td>3.0</td>\n","      <td>actor</td>\n","      <td>[\"Franklyn Ambruster\"]</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>nm0000001</td>\n","      <td>Fred Astaire</td>\n","      <td>1899</td>\n","      <td>1987</td>\n","      <td>tt0050419,tt0072308,tt0053137,tt0027125</td>\n","      <td>tt0062974</td>\n","      <td>1.0</td>\n","      <td>actor</td>\n","      <td>[\"Finian McLonergan\"]</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>nm0000001</td>\n","      <td>Fred Astaire</td>\n","      <td>1899</td>\n","      <td>1987</td>\n","      <td>tt0050419,tt0072308,tt0053137,tt0027125</td>\n","      <td>tt0064664</td>\n","      <td>1.0</td>\n","      <td>actor</td>\n","      <td>[\"John Pedley\"]</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>nm0000001</td>\n","      <td>Fred Astaire</td>\n","      <td>1899</td>\n","      <td>1987</td>\n","      <td>tt0050419,tt0072308,tt0053137,tt0027125</td>\n","      <td>tt15000932</td>\n","      <td>5.0</td>\n","      <td>archive_footage</td>\n","      <td>[\"Self\"]</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-e8fd67ae-7c62-492b-9e03-eff2d90e3874')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-e8fd67ae-7c62-492b-9e03-eff2d90e3874 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-e8fd67ae-7c62-492b-9e03-eff2d90e3874');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-48f64f46-0396-4e4f-bc46-2b2b5c1b43a1\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-48f64f46-0396-4e4f-bc46-2b2b5c1b43a1')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-48f64f46-0396-4e4f-bc46-2b2b5c1b43a1 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"text/plain":["      nconst   primaryName birthYear deathYear  \\\n","0  nm0000001  Fred Astaire      1899      1987   \n","1  nm0000001  Fred Astaire      1899      1987   \n","2  nm0000001  Fred Astaire      1899      1987   \n","3  nm0000001  Fred Astaire      1899      1987   \n","4  nm0000001  Fred Astaire      1899      1987   \n","\n","                            knownForTitles      tconst  ordering  \\\n","0  tt0050419,tt0072308,tt0053137,tt0027125   tt0055307       1.0   \n","1  tt0050419,tt0072308,tt0053137,tt0027125   tt0056289       3.0   \n","2  tt0050419,tt0072308,tt0053137,tt0027125   tt0062974       1.0   \n","3  tt0050419,tt0072308,tt0053137,tt0027125   tt0064664       1.0   \n","4  tt0050419,tt0072308,tt0053137,tt0027125  tt15000932       5.0   \n","\n","          category                  characters  \n","0            actor  [\"Biddeford 'Pogo' Poole\"]  \n","1            actor      [\"Franklyn Ambruster\"]  \n","2            actor       [\"Finian McLonergan\"]  \n","3            actor             [\"John Pedley\"]  \n","4  archive_footage                    [\"Self\"]  "]},"execution_count":20,"metadata":{},"output_type":"execute_result"}],"source":["# On ajoute les acteurs ?\n","\n","data_actors.head()"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"y5hG5zIOgYy9"},"outputs":[],"source":["data_actors_ =data_actors[data_actors['ordering']<=3]"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":424},"executionInfo":{"elapsed":23,"status":"ok","timestamp":1733502198109,"user":{"displayName":"Audrey Saussaye","userId":"13741928634988018064"},"user_tz":-60},"id":"F40iHkKWmwra","outputId":"027c8094-eb04-48b6-dd22-3f8e7012f4a1"},"outputs":[{"data":{"application/vnd.google.colaboratory.intrinsic+json":{"summary":"{\n  \"name\": \"data_actors_\",\n  \"rows\": 43615,\n  \"fields\": [\n    {\n      \"column\": \"index\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 53585,\n        \"min\": 0,\n        \"max\": 175980,\n        \"num_unique_values\": 43615,\n        \"samples\": [\n          34912,\n          59303,\n          84431\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"nconst\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 23784,\n        \"samples\": [\n          \"nm1388227\",\n          \"nm0534635\",\n          \"nm0537631\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"primaryName\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 23760,\n        \"samples\": [\n          \"Titania Galliher\",\n          \"Susan Clark\",\n          \"Cassiop\\u00e9e Mayance\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"birthYear\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 139,\n        \"samples\": [\n          \"2011\",\n          \"1931\",\n          \"1960\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"deathYear\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 75,\n        \"samples\": [\n          \"1986\",\n          \"1962\",\n          \"2008\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"knownForTitles\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 23368,\n        \"samples\": [\n          \"tt8266310,tt1125849,tt0107818,tt0116695\",\n          \"tt0448011,tt1587000,tt0424880,tt0482599\",\n          \"tt1703199,tt0401855,tt2231554,tt2193021\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"tconst\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 15017,\n        \"samples\": [\n          \"tt0056947\",\n          \"tt0808276\",\n          \"tt0064175\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"ordering\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.81636206469944,\n        \"min\": 1.0,\n        \"max\": 3.0,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          1.0,\n          3.0,\n          2.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"category\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 11,\n        \"samples\": [\n          \"archive_sound\",\n          \"actor\",\n          \"actress\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"characters\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 29464,\n        \"samples\": [\n          \"[\\\"Chief Malone\\\"]\",\n          \"[\\\"Winko\\\"]\",\n          \"[\\\"Biskoppen\\\"]\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}","type":"dataframe"},"text/html":["\n","  <div id=\"df-d8c735ea-5911-4765-a0ad-ee733cc5f0eb\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>index</th>\n","      <th>nconst</th>\n","      <th>primaryName</th>\n","      <th>birthYear</th>\n","      <th>deathYear</th>\n","      <th>knownForTitles</th>\n","      <th>tconst</th>\n","      <th>ordering</th>\n","      <th>category</th>\n","      <th>characters</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0</td>\n","      <td>nm0000001</td>\n","      <td>Fred Astaire</td>\n","      <td>1899</td>\n","      <td>1987</td>\n","      <td>tt0050419,tt0072308,tt0053137,tt0027125</td>\n","      <td>tt0055307</td>\n","      <td>1.0</td>\n","      <td>actor</td>\n","      <td>[\"Biddeford 'Pogo' Poole\"]</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1</td>\n","      <td>nm0000001</td>\n","      <td>Fred Astaire</td>\n","      <td>1899</td>\n","      <td>1987</td>\n","      <td>tt0050419,tt0072308,tt0053137,tt0027125</td>\n","      <td>tt0056289</td>\n","      <td>3.0</td>\n","      <td>actor</td>\n","      <td>[\"Franklyn Ambruster\"]</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2</td>\n","      <td>nm0000001</td>\n","      <td>Fred Astaire</td>\n","      <td>1899</td>\n","      <td>1987</td>\n","      <td>tt0050419,tt0072308,tt0053137,tt0027125</td>\n","      <td>tt0062974</td>\n","      <td>1.0</td>\n","      <td>actor</td>\n","      <td>[\"Finian McLonergan\"]</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>3</td>\n","      <td>nm0000001</td>\n","      <td>Fred Astaire</td>\n","      <td>1899</td>\n","      <td>1987</td>\n","      <td>tt0050419,tt0072308,tt0053137,tt0027125</td>\n","      <td>tt0064664</td>\n","      <td>1.0</td>\n","      <td>actor</td>\n","      <td>[\"John Pedley\"]</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>20</td>\n","      <td>nm0000005</td>\n","      <td>Ingmar Bergman</td>\n","      <td>1918</td>\n","      <td>2007</td>\n","      <td>tt0050986,tt0069467,tt0050976,tt0083922</td>\n","      <td>tt2327430</td>\n","      <td>2.0</td>\n","      <td>archive_footage</td>\n","      <td>[\"Self\"]</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>43610</th>\n","      <td>175958</td>\n","      <td>nm9956891</td>\n","      <td>Riko Fukumoto</td>\n","      <td>2000</td>\n","      <td>\\N</td>\n","      <td>tt21115444,tt10228546,tt10385034,tt33452952</td>\n","      <td>tt15467380</td>\n","      <td>3.0</td>\n","      <td>actress</td>\n","      <td>[\"Towa\"]</td>\n","    </tr>\n","    <tr>\n","      <th>43611</th>\n","      <td>175959</td>\n","      <td>nm9956891</td>\n","      <td>Riko Fukumoto</td>\n","      <td>2000</td>\n","      <td>\\N</td>\n","      <td>tt21115444,tt10228546,tt10385034,tt33452952</td>\n","      <td>tt21115444</td>\n","      <td>2.0</td>\n","      <td>actress</td>\n","      <td>[\"Maori Hino\"]</td>\n","    </tr>\n","    <tr>\n","      <th>43612</th>\n","      <td>175969</td>\n","      <td>nm9980137</td>\n","      <td>Harriet Slater</td>\n","      <td>\\N</td>\n","      <td>\\N</td>\n","      <td>tt8425532,tt23931190,tt14088510,tt18332852</td>\n","      <td>tt14088510</td>\n","      <td>1.0</td>\n","      <td>actress</td>\n","      <td>[\"Haley\"]</td>\n","    </tr>\n","    <tr>\n","      <th>43613</th>\n","      <td>175971</td>\n","      <td>nm9984431</td>\n","      <td>Kyleigh Bakker</td>\n","      <td>2004</td>\n","      <td>\\N</td>\n","      <td>tt8723336,tt14529246,tt11177034,tt21104674</td>\n","      <td>tt21104674</td>\n","      <td>2.0</td>\n","      <td>actress</td>\n","      <td>[\"Sam\"]</td>\n","    </tr>\n","    <tr>\n","      <th>43614</th>\n","      <td>175980</td>\n","      <td>nm9991000</td>\n","      <td>Divyansha Kaushik</td>\n","      <td>1997</td>\n","      <td>\\N</td>\n","      <td>tt15028848,tt8737614,tt15309808,tt9872558</td>\n","      <td>tt15309808</td>\n","      <td>3.0</td>\n","      <td>actress</td>\n","      <td>[\"Theera\"]</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>43615 rows × 10 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-d8c735ea-5911-4765-a0ad-ee733cc5f0eb')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-d8c735ea-5911-4765-a0ad-ee733cc5f0eb button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-d8c735ea-5911-4765-a0ad-ee733cc5f0eb');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-111b449f-9c3e-4f47-82b9-e765f7ca5b17\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-111b449f-9c3e-4f47-82b9-e765f7ca5b17')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-111b449f-9c3e-4f47-82b9-e765f7ca5b17 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"text/plain":["        index     nconst        primaryName birthYear deathYear  \\\n","0           0  nm0000001       Fred Astaire      1899      1987   \n","1           1  nm0000001       Fred Astaire      1899      1987   \n","2           2  nm0000001       Fred Astaire      1899      1987   \n","3           3  nm0000001       Fred Astaire      1899      1987   \n","4          20  nm0000005     Ingmar Bergman      1918      2007   \n","...       ...        ...                ...       ...       ...   \n","43610  175958  nm9956891      Riko Fukumoto      2000        \\N   \n","43611  175959  nm9956891      Riko Fukumoto      2000        \\N   \n","43612  175969  nm9980137     Harriet Slater        \\N        \\N   \n","43613  175971  nm9984431     Kyleigh Bakker      2004        \\N   \n","43614  175980  nm9991000  Divyansha Kaushik      1997        \\N   \n","\n","                                    knownForTitles      tconst  ordering  \\\n","0          tt0050419,tt0072308,tt0053137,tt0027125   tt0055307       1.0   \n","1          tt0050419,tt0072308,tt0053137,tt0027125   tt0056289       3.0   \n","2          tt0050419,tt0072308,tt0053137,tt0027125   tt0062974       1.0   \n","3          tt0050419,tt0072308,tt0053137,tt0027125   tt0064664       1.0   \n","4          tt0050986,tt0069467,tt0050976,tt0083922   tt2327430       2.0   \n","...                                            ...         ...       ...   \n","43610  tt21115444,tt10228546,tt10385034,tt33452952  tt15467380       3.0   \n","43611  tt21115444,tt10228546,tt10385034,tt33452952  tt21115444       2.0   \n","43612   tt8425532,tt23931190,tt14088510,tt18332852  tt14088510       1.0   \n","43613   tt8723336,tt14529246,tt11177034,tt21104674  tt21104674       2.0   \n","43614    tt15028848,tt8737614,tt15309808,tt9872558  tt15309808       3.0   \n","\n","              category                  characters  \n","0                actor  [\"Biddeford 'Pogo' Poole\"]  \n","1                actor      [\"Franklyn Ambruster\"]  \n","2                actor       [\"Finian McLonergan\"]  \n","3                actor             [\"John Pedley\"]  \n","4      archive_footage                    [\"Self\"]  \n","...                ...                         ...  \n","43610          actress                    [\"Towa\"]  \n","43611          actress              [\"Maori Hino\"]  \n","43612          actress                   [\"Haley\"]  \n","43613          actress                     [\"Sam\"]  \n","43614          actress                  [\"Theera\"]  \n","\n","[43615 rows x 10 columns]"]},"execution_count":22,"metadata":{},"output_type":"execute_result"}],"source":["data_actors_.reset_index()"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":424},"executionInfo":{"elapsed":223,"status":"ok","timestamp":1733502198313,"user":{"displayName":"Audrey Saussaye","userId":"13741928634988018064"},"user_tz":-60},"id":"CbNluMc_n2Ox","outputId":"11476dc7-f518-45df-f6c4-496922f19b8f"},"outputs":[{"data":{"application/vnd.google.colaboratory.intrinsic+json":{"summary":"{\n  \"name\": \"data_actors_\",\n  \"rows\": 43615,\n  \"fields\": [\n    {\n      \"column\": \"nconst\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 23784,\n        \"samples\": [\n          \"nm1388227\",\n          \"nm0534635\",\n          \"nm0537631\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"primaryName\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 23760,\n        \"samples\": [\n          \"Titania Galliher\",\n          \"Susan Clark\",\n          \"Cassiop\\u00e9e Mayance\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"birthYear\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 139,\n        \"samples\": [\n          \"2011\",\n          \"1931\",\n          \"1960\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"deathYear\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 75,\n        \"samples\": [\n          \"1986\",\n          \"1962\",\n          \"2008\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"knownForTitles\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 23368,\n        \"samples\": [\n          \"tt8266310,tt1125849,tt0107818,tt0116695\",\n          \"tt0448011,tt1587000,tt0424880,tt0482599\",\n          \"tt1703199,tt0401855,tt2231554,tt2193021\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"tconst\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 15017,\n        \"samples\": [\n          \"tt0056947\",\n          \"tt0808276\",\n          \"tt0064175\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"ordering\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.81636206469944,\n        \"min\": 1.0,\n        \"max\": 3.0,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          1.0,\n          3.0,\n          2.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"category\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 11,\n        \"samples\": [\n          \"archive_sound\",\n          \"actor\",\n          \"actress\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"characters\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 29464,\n        \"samples\": [\n          \"[\\\"Chief Malone\\\"]\",\n          \"[\\\"Winko\\\"]\",\n          \"[\\\"Biskoppen\\\"]\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}","type":"dataframe","variable_name":"data_actors_"},"text/html":["\n","  <div id=\"df-e34b727b-44b2-41db-965e-b6c18843014a\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>nconst</th>\n","      <th>primaryName</th>\n","      <th>birthYear</th>\n","      <th>deathYear</th>\n","      <th>knownForTitles</th>\n","      <th>tconst</th>\n","      <th>ordering</th>\n","      <th>category</th>\n","      <th>characters</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>nm0000001</td>\n","      <td>Fred Astaire</td>\n","      <td>1899</td>\n","      <td>1987</td>\n","      <td>tt0050419,tt0072308,tt0053137,tt0027125</td>\n","      <td>tt0055307</td>\n","      <td>1.0</td>\n","      <td>actor</td>\n","      <td>[\"Biddeford 'Pogo' Poole\"]</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>nm0000001</td>\n","      <td>Fred Astaire</td>\n","      <td>1899</td>\n","      <td>1987</td>\n","      <td>tt0050419,tt0072308,tt0053137,tt0027125</td>\n","      <td>tt0056289</td>\n","      <td>3.0</td>\n","      <td>actor</td>\n","      <td>[\"Franklyn Ambruster\"]</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>nm0000001</td>\n","      <td>Fred Astaire</td>\n","      <td>1899</td>\n","      <td>1987</td>\n","      <td>tt0050419,tt0072308,tt0053137,tt0027125</td>\n","      <td>tt0062974</td>\n","      <td>1.0</td>\n","      <td>actor</td>\n","      <td>[\"Finian McLonergan\"]</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>nm0000001</td>\n","      <td>Fred Astaire</td>\n","      <td>1899</td>\n","      <td>1987</td>\n","      <td>tt0050419,tt0072308,tt0053137,tt0027125</td>\n","      <td>tt0064664</td>\n","      <td>1.0</td>\n","      <td>actor</td>\n","      <td>[\"John Pedley\"]</td>\n","    </tr>\n","    <tr>\n","      <th>20</th>\n","      <td>nm0000005</td>\n","      <td>Ingmar Bergman</td>\n","      <td>1918</td>\n","      <td>2007</td>\n","      <td>tt0050986,tt0069467,tt0050976,tt0083922</td>\n","      <td>tt2327430</td>\n","      <td>2.0</td>\n","      <td>archive_footage</td>\n","      <td>[\"Self\"]</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>175958</th>\n","      <td>nm9956891</td>\n","      <td>Riko Fukumoto</td>\n","      <td>2000</td>\n","      <td>\\N</td>\n","      <td>tt21115444,tt10228546,tt10385034,tt33452952</td>\n","      <td>tt15467380</td>\n","      <td>3.0</td>\n","      <td>actress</td>\n","      <td>[\"Towa\"]</td>\n","    </tr>\n","    <tr>\n","      <th>175959</th>\n","      <td>nm9956891</td>\n","      <td>Riko Fukumoto</td>\n","      <td>2000</td>\n","      <td>\\N</td>\n","      <td>tt21115444,tt10228546,tt10385034,tt33452952</td>\n","      <td>tt21115444</td>\n","      <td>2.0</td>\n","      <td>actress</td>\n","      <td>[\"Maori Hino\"]</td>\n","    </tr>\n","    <tr>\n","      <th>175969</th>\n","      <td>nm9980137</td>\n","      <td>Harriet Slater</td>\n","      <td>\\N</td>\n","      <td>\\N</td>\n","      <td>tt8425532,tt23931190,tt14088510,tt18332852</td>\n","      <td>tt14088510</td>\n","      <td>1.0</td>\n","      <td>actress</td>\n","      <td>[\"Haley\"]</td>\n","    </tr>\n","    <tr>\n","      <th>175971</th>\n","      <td>nm9984431</td>\n","      <td>Kyleigh Bakker</td>\n","      <td>2004</td>\n","      <td>\\N</td>\n","      <td>tt8723336,tt14529246,tt11177034,tt21104674</td>\n","      <td>tt21104674</td>\n","      <td>2.0</td>\n","      <td>actress</td>\n","      <td>[\"Sam\"]</td>\n","    </tr>\n","    <tr>\n","      <th>175980</th>\n","      <td>nm9991000</td>\n","      <td>Divyansha Kaushik</td>\n","      <td>1997</td>\n","      <td>\\N</td>\n","      <td>tt15028848,tt8737614,tt15309808,tt9872558</td>\n","      <td>tt15309808</td>\n","      <td>3.0</td>\n","      <td>actress</td>\n","      <td>[\"Theera\"]</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>43615 rows × 9 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-e34b727b-44b2-41db-965e-b6c18843014a')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-e34b727b-44b2-41db-965e-b6c18843014a button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-e34b727b-44b2-41db-965e-b6c18843014a');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-e4067958-4d55-4bd3-adfa-5d50a5064138\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-e4067958-4d55-4bd3-adfa-5d50a5064138')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-e4067958-4d55-4bd3-adfa-5d50a5064138 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_89fdfbc3-f0d8-4e49-aef2-b90267154b13\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('data_actors_')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_89fdfbc3-f0d8-4e49-aef2-b90267154b13 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('data_actors_');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"text/plain":["           nconst        primaryName birthYear deathYear  \\\n","0       nm0000001       Fred Astaire      1899      1987   \n","1       nm0000001       Fred Astaire      1899      1987   \n","2       nm0000001       Fred Astaire      1899      1987   \n","3       nm0000001       Fred Astaire      1899      1987   \n","20      nm0000005     Ingmar Bergman      1918      2007   \n","...           ...                ...       ...       ...   \n","175958  nm9956891      Riko Fukumoto      2000        \\N   \n","175959  nm9956891      Riko Fukumoto      2000        \\N   \n","175969  nm9980137     Harriet Slater        \\N        \\N   \n","175971  nm9984431     Kyleigh Bakker      2004        \\N   \n","175980  nm9991000  Divyansha Kaushik      1997        \\N   \n","\n","                                     knownForTitles      tconst  ordering  \\\n","0           tt0050419,tt0072308,tt0053137,tt0027125   tt0055307       1.0   \n","1           tt0050419,tt0072308,tt0053137,tt0027125   tt0056289       3.0   \n","2           tt0050419,tt0072308,tt0053137,tt0027125   tt0062974       1.0   \n","3           tt0050419,tt0072308,tt0053137,tt0027125   tt0064664       1.0   \n","20          tt0050986,tt0069467,tt0050976,tt0083922   tt2327430       2.0   \n","...                                             ...         ...       ...   \n","175958  tt21115444,tt10228546,tt10385034,tt33452952  tt15467380       3.0   \n","175959  tt21115444,tt10228546,tt10385034,tt33452952  tt21115444       2.0   \n","175969   tt8425532,tt23931190,tt14088510,tt18332852  tt14088510       1.0   \n","175971   tt8723336,tt14529246,tt11177034,tt21104674  tt21104674       2.0   \n","175980    tt15028848,tt8737614,tt15309808,tt9872558  tt15309808       3.0   \n","\n","               category                  characters  \n","0                 actor  [\"Biddeford 'Pogo' Poole\"]  \n","1                 actor      [\"Franklyn Ambruster\"]  \n","2                 actor       [\"Finian McLonergan\"]  \n","3                 actor             [\"John Pedley\"]  \n","20      archive_footage                    [\"Self\"]  \n","...                 ...                         ...  \n","175958          actress                    [\"Towa\"]  \n","175959          actress              [\"Maori Hino\"]  \n","175969          actress                   [\"Haley\"]  \n","175971          actress                     [\"Sam\"]  \n","175980          actress                  [\"Theera\"]  \n","\n","[43615 rows x 9 columns]"]},"execution_count":23,"metadata":{},"output_type":"execute_result"}],"source":["data_actors_"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":1000},"executionInfo":{"elapsed":15,"status":"ok","timestamp":1733502198313,"user":{"displayName":"Audrey Saussaye","userId":"13741928634988018064"},"user_tz":-60},"id":"vpHYxNz4g7_k","outputId":"7c5c666b-5890-4ce6-e63c-1b72516aaf02"},"outputs":[{"data":{"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"data"},"text/html":["\n","  <div id=\"df-7ff1d24a-4b4d-41f4-88b9-8d4e326f526e\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>budget</th>\n","      <th>revenue</th>\n","      <th>production_companies_name</th>\n","      <th>production_countries</th>\n","      <th>homepage</th>\n","      <th>imdb_id</th>\n","      <th>overview</th>\n","      <th>popularity</th>\n","      <th>poster_path</th>\n","      <th>spoken_languages</th>\n","      <th>...</th>\n","      <th>33.0</th>\n","      <th>34.0</th>\n","      <th>35.0</th>\n","      <th>36.0</th>\n","      <th>37.0</th>\n","      <th>38.0</th>\n","      <th>39.0</th>\n","      <th>actor1</th>\n","      <th>actor2</th>\n","      <th>actor3</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>['Ulysse Productions', 'Unitec Films', 'Cinesecolo', 'TOHO', 'Beta Film', 'Film Polski', 'Zespół Filmowy \"Kamera\"']</td>\n","      <td>['DE', 'FR', 'IT', 'JP', 'PL']</td>\n","      <td>NaN</td>\n","      <td>tt0055747</td>\n","      <td>Love at Twenty unites five directors from five different countries to present their different perspectives on what love really is at the age of 20. The episodes are united with the score of Georges Delerue and still photos of Henri Cartier-Bresson.</td>\n","      <td>3.770</td>\n","      <td>/aup2QCYCsyEeQfpboXy0f4uj8aE.jpg</td>\n","      <td>['it', 'ja', 'pl', 'fr', 'de']</td>\n","      <td>...</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>4000000</td>\n","      <td>4257354</td>\n","      <td>['Miramax', 'A Band Apart']</td>\n","      <td>['US']</td>\n","      <td>https://www.miramax.com/movie/four-rooms/</td>\n","      <td>tt0113101</td>\n","      <td>It's Ted the Bellhop's first night on the job...and the hotel's very unusual guests are about to place him in some outrageous predicaments. It seems that this evening's room service is serving up one unbelievable happening after another.</td>\n","      <td>18.734</td>\n","      <td>/75aHn1NOYXh4M7L5shoeQ6NGykP.jpg</td>\n","      <td>['en']</td>\n","      <td>...</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>21000000</td>\n","      <td>12136938</td>\n","      <td>['Largo Entertainment', 'JVC']</td>\n","      <td>['US']</td>\n","      <td>NaN</td>\n","      <td>tt0107286</td>\n","      <td>While racing to a boxing match, Frank, Mike, John and Rey get more than they bargained for. A wrong turn lands them directly in the path of Fallon, a vicious, wise-cracking drug lord. After accidentally witnessing Fallon murder a disloyal henchman, the four become his unwilling prey in a savage game of cat and mouse as they are mercilessly stalked through the urban jungle in this taut suspense drama.</td>\n","      <td>10.797</td>\n","      <td>/3rvvpS9YPM5HB2f4HYiNiJVtdam.jpg</td>\n","      <td>['en']</td>\n","      <td>...</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>11000000</td>\n","      <td>775398007</td>\n","      <td>['Lucasfilm Ltd.', '20th Century Fox']</td>\n","      <td>['US']</td>\n","      <td>http://www.starwars.com/films/star-wars-episode-iv-a-new-hope</td>\n","      <td>tt0076759</td>\n","      <td>Princess Leia is captured and held hostage by the evil Imperial forces in their effort to take over the galactic Empire. Venturesome Luke Skywalker and dashing captain Han Solo team together with the loveable robot duo R2-D2 and C-3PO to rescue the beautiful princess and restore peace and justice in the Empire.</td>\n","      <td>90.988</td>\n","      <td>/6FfCtAuVAW8XJjZ7eWeLibRLWTw.jpg</td>\n","      <td>['en']</td>\n","      <td>...</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>94000000</td>\n","      <td>940335536</td>\n","      <td>['Pixar']</td>\n","      <td>['US']</td>\n","      <td>http://movies.disney.com/finding-nemo</td>\n","      <td>tt0266543</td>\n","      <td>Nemo, an adventurous young clownfish, is unexpectedly taken from his Great Barrier Reef home to a dentist's office aquarium. It's up to his worrisome father Marlin and a friendly but forgetful fish Dory to bring Nemo home -- meeting vegetarian sharks, surfer dude turtles, hypnotic jellyfish, hungry seagulls, and more along the way.</td>\n","      <td>68.898</td>\n","      <td>/5lc6nQc0VhWFYFbNv016xze8Jvy.jpg</td>\n","      <td>['en']</td>\n","      <td>...</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>23371</th>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>['Data Filmes']</td>\n","      <td>['BR']</td>\n","      <td>NaN</td>\n","      <td>tt0183685</td>\n","      <td>A middle-aged man copes with the loss of his job and his impending blindness.</td>\n","      <td>0.600</td>\n","      <td>/i1bmXvE3heahIXCeaSZWKpweV4I.jpg</td>\n","      <td>['pt']</td>\n","      <td>...</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>23372</th>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>[]</td>\n","      <td>['SY']</td>\n","      <td>NaN</td>\n","      <td>tt0134279</td>\n","      <td>In the film that marks the emergence of auteur cinema in Syria, a young widow and her children are forced to move to Damascus, where the boys come of age against the backdrop of the military coups that punctuated the 1950s.</td>\n","      <td>0.840</td>\n","      <td>/lxPSJX4U8yhyCaRNH9pL0zwbGRc.jpg</td>\n","      <td>['ar']</td>\n","      <td>...</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>23373</th>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>['Filmové studio Barrandov']</td>\n","      <td>['XC']</td>\n","      <td>NaN</td>\n","      <td>tt0174744</td>\n","      <td>Marta (Jana Brejchová) and Viktor (Vlastimil Brodský) celebrate the tenth anniversary of their wedding half-heartedly. They both think they don't suit together. While visiting Marta's friend Alena (Iva Janzurová), who just got married for the third time, they learn an interesting thing. It was a computer which selected a husband for Alena and she claims she is happy. The couple gets off after certain hesitation to a cybernetic institute, where the computer tells them that living together is a risk for them. At the same time the computer selects them ideal partners - Mrs Tuchlová, a doctor for Viktor, and Petr Karát, a music composer for Marta. By a coincidence Viktor and Marta meet wrong people.</td>\n","      <td>1.216</td>\n","      <td>/Aj9Kp8tggvWgtxzscdt4ZNM8i18.jpg</td>\n","      <td>['cs']</td>\n","      <td>...</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>23374</th>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>['Kuo Hwa Motion Picture Co., Ltd.']</td>\n","      <td>['TW']</td>\n","      <td>NaN</td>\n","      <td>tt0165213</td>\n","      <td>hsiao hai (ting hwa chung) is a kung fu servant of the big boss (lung fei). bullied and abused he finds himself taken under the wing of the boss when he stops some troublemakers. rising in status; hsiao hai begins to learn the boss dreaded chicken fist. hsiao falls in love with a girl shao hua who works at a food stall. shao hua and her father are mantis fist experts and inform hsiao that his boss is not the upstanding man he appears to be</td>\n","      <td>0.870</td>\n","      <td>/j9oex6tC1GCGgYFTE3MOCsHRPz2.jpg</td>\n","      <td>[]</td>\n","      <td>...</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>23375</th>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>['La Vie Est Belle Films Associés']</td>\n","      <td>['FR']</td>\n","      <td>NaN</td>\n","      <td>tt1442625</td>\n","      <td>NaN</td>\n","      <td>0.600</td>\n","      <td>NaN</td>\n","      <td>['fr']</td>\n","      <td>...</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>23376 rows × 70 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-7ff1d24a-4b4d-41f4-88b9-8d4e326f526e')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-7ff1d24a-4b4d-41f4-88b9-8d4e326f526e button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-7ff1d24a-4b4d-41f4-88b9-8d4e326f526e');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-67b00b98-33d3-49b5-966f-e5d847109a03\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-67b00b98-33d3-49b5-966f-e5d847109a03')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-67b00b98-33d3-49b5-966f-e5d847109a03 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_41e605dd-685c-479d-b7f5-fd87955064a7\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('data')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_41e605dd-685c-479d-b7f5-fd87955064a7 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('data');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"text/plain":["         budget    revenue  \\\n","0             0          0   \n","1       4000000    4257354   \n","2      21000000   12136938   \n","3      11000000  775398007   \n","4      94000000  940335536   \n","...         ...        ...   \n","23371         0          0   \n","23372         0          0   \n","23373         0          0   \n","23374         0          0   \n","23375         0          0   \n","\n","                                                                                                 production_companies_name  \\\n","0      ['Ulysse Productions', 'Unitec Films', 'Cinesecolo', 'TOHO', 'Beta Film', 'Film Polski', 'Zespół Filmowy \"Kamera\"']   \n","1                                                                                              ['Miramax', 'A Band Apart']   \n","2                                                                                           ['Largo Entertainment', 'JVC']   \n","3                                                                                   ['Lucasfilm Ltd.', '20th Century Fox']   \n","4                                                                                                                ['Pixar']   \n","...                                                                                                                    ...   \n","23371                                                                                                      ['Data Filmes']   \n","23372                                                                                                                   []   \n","23373                                                                                         ['Filmové studio Barrandov']   \n","23374                                                                                 ['Kuo Hwa Motion Picture Co., Ltd.']   \n","23375                                                                                  ['La Vie Est Belle Films Associés']   \n","\n","                 production_countries  \\\n","0      ['DE', 'FR', 'IT', 'JP', 'PL']   \n","1                              ['US']   \n","2                              ['US']   \n","3                              ['US']   \n","4                              ['US']   \n","...                               ...   \n","23371                          ['BR']   \n","23372                          ['SY']   \n","23373                          ['XC']   \n","23374                          ['TW']   \n","23375                          ['FR']   \n","\n","                                                            homepage  \\\n","0                                                                NaN   \n","1                          https://www.miramax.com/movie/four-rooms/   \n","2                                                                NaN   \n","3      http://www.starwars.com/films/star-wars-episode-iv-a-new-hope   \n","4                              http://movies.disney.com/finding-nemo   \n","...                                                              ...   \n","23371                                                            NaN   \n","23372                                                            NaN   \n","23373                                                            NaN   \n","23374                                                            NaN   \n","23375                                                            NaN   \n","\n","         imdb_id  \\\n","0      tt0055747   \n","1      tt0113101   \n","2      tt0107286   \n","3      tt0076759   \n","4      tt0266543   \n","...          ...   \n","23371  tt0183685   \n","23372  tt0134279   \n","23373  tt0174744   \n","23374  tt0165213   \n","23375  tt1442625   \n","\noverview  \\\n","0                                                                                                                                                                                                                                                                                                                                                                                                                                                                              Love at Twenty unites five directors from five different countries to present their different perspectives on what love really is at the age of 20. The episodes are united with the score of Georges Delerue and still photos of Henri Cartier-Bresson.   \n","1                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         It's Ted the Bellhop's first night on the job...and the hotel's very unusual guests are about to place him in some outrageous predicaments. It seems that this evening's room service is serving up one unbelievable happening after another.   \n","2                                                                                                                                                                                                                                                                                                                   While racing to a boxing match, Frank, Mike, John and Rey get more than they bargained for. A wrong turn lands them directly in the path of Fallon, a vicious, wise-cracking drug lord. After accidentally witnessing Fallon murder a disloyal henchman, the four become his unwilling prey in a savage game of cat and mouse as they are mercilessly stalked through the urban jungle in this taut suspense drama.   \n","3                                                                                                                                                                                                                                                                                                                                                                                                              Princess Leia is captured and held hostage by the evil Imperial forces in their effort to take over the galactic Empire. Venturesome Luke Skywalker and dashing captain Han Solo team together with the loveable robot duo R2-D2 and C-3PO to rescue the beautiful princess and restore peace and justice in the Empire.   \n","4                                                                                                                                                                                                                                                                                                                                                                                         Nemo, an adventurous young clownfish, is unexpectedly taken from his Great Barrier Reef home to a dentist's office aquarium. It's up to his worrisome father Marlin and a friendly but forgetful fish Dory to bring Nemo home -- meeting vegetarian sharks, surfer dude turtles, hypnotic jellyfish, hungry seagulls, and more along the way.   \nn","23371                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     A middle-aged man copes with the loss of his job and his impending blindness.   \n","23372                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   In the film that marks the emergence of auteur cinema in Syria, a young widow and her children are forced to move to Damascus, where the boys come of age against the backdrop of the military coups that punctuated the 1950s.   \n","23373  Marta (Jana Brejchová) and Viktor (Vlastimil Brodský) celebrate the tenth anniversary of their wedding half-heartedly. They both think they don't suit together. While visiting Marta's friend Alena (Iva Janzurová), who just got married for the third time, they learn an interesting thing. It was a computer which selected a husband for Alena and she claims she is happy. The couple gets off after certain hesitation to a cybernetic institute, where the computer tells them that living together is a risk for them. At the same time the computer selects them ideal partners - Mrs Tuchlová, a doctor for Viktor, and Petr Karát, a music composer for Marta. By a coincidence Viktor and Marta meet wrong people.   \n","23374                                                                                                                                                                                                                                                                       hsiao hai (ting hwa chung) is a kung fu servant of the big boss (lung fei). bullied and abused he finds himself taken under the wing of the boss when he stops some troublemakers. rising in status; hsiao hai begins to learn the boss dreaded chicken fist. hsiao falls in love with a girl shao hua who works at a food stall. shao hua and her father are mantis fist experts and inform hsiao that his boss is not the upstanding man he appears to be   \naN   \n","\n","       popularity                       poster_path  \\\n","0           3.770  /aup2QCYCsyEeQfpboXy0f4uj8aE.jpg   \n","1          18.734  /75aHn1NOYXh4M7L5shoeQ6NGykP.jpg   \n","2          10.797  /3rvvpS9YPM5HB2f4HYiNiJVtdam.jpg   \n","3          90.988  /6FfCtAuVAW8XJjZ7eWeLibRLWTw.jpg   \n","4          68.898  /5lc6nQc0VhWFYFbNv016xze8Jvy.jpg   \n","...           ...                               ...   \n","23371       0.600  /i1bmXvE3heahIXCeaSZWKpweV4I.jpg   \n","23372       0.840  /lxPSJX4U8yhyCaRNH9pL0zwbGRc.jpg   \n","23373       1.216  /Aj9Kp8tggvWgtxzscdt4ZNM8i18.jpg   \n","23374       0.870  /j9oex6tC1GCGgYFTE3MOCsHRPz2.jpg   \n","23375       0.600                               NaN   \n","\n","                     spoken_languages  ...  33.0 34.0 35.0 36.0 37.0  38.0  \\\n","0      ['it', 'ja', 'pl', 'fr', 'de']  ...   NaN  NaN  NaN  NaN  NaN   NaN   \n","1                              ['en']  ...   NaN  NaN  NaN  NaN  NaN   NaN   \n","2                              ['en']  ...   NaN  NaN  NaN  NaN  NaN   NaN   \n","3                              ['en']  ...   NaN  NaN  NaN  NaN  NaN   NaN   \n","4                              ['en']  ...   NaN  NaN  NaN  NaN  NaN   NaN   \n","...                               ...  ...   ...  ...  ...  ...  ...   ...   \n","23371                          ['pt']  ...   NaN  NaN  NaN  NaN  NaN   NaN   \n","23372                          ['ar']  ...   NaN  NaN  NaN  NaN  NaN   NaN   \n","23373                          ['cs']  ...   NaN  NaN  NaN  NaN  NaN   NaN   \n","23374                              []  ...   NaN  NaN  NaN  NaN  NaN   NaN   \n","23375                          ['fr']  ...   NaN  NaN  NaN  NaN  NaN   NaN   \n","\n","       39.0 actor1  actor2 actor3  \n","0       NaN    NaN     NaN    NaN  \n","1       NaN    NaN     NaN    NaN  \n","2       NaN    NaN     NaN    NaN  \n","3       NaN    NaN     NaN    NaN  \n","4       NaN    NaN     NaN    NaN  \n","...     ...    ...     ...    ...  \n","23371   NaN    NaN     NaN    NaN  \n","23372   NaN    NaN     NaN    NaN  \n","23373   NaN    NaN     NaN    NaN  \n","23374   NaN    NaN     NaN    NaN  \n","23375   NaN    NaN     NaN    NaN  \n","\n","[23376 rows x 70 columns]"]},"execution_count":24,"metadata":{},"output_type":"execute_result"}],"source":["data_actors_ = data_actors[['tconst','ordering','primaryName']]\n","data_actors_ = pd.DataFrame(data_actors_.pivot_table(index='tconst',columns = 'ordering' ,values=['primaryName'], aggfunc='first'))\n","data_actors_ = data_actors_.droplevel(0, axis=1)\n","data = pd.merge(data, data_actors_, how = 'left', left_on = 'titleId', right_on = 'tconst')\n","data.columns.values[-3] = \"actor1\"\n","data.columns.values[-2] = \"actor2\"\n","data.columns.values[-1] = \"actor3\"\n","data"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"3YOWI3DIxs1y"},"outputs":[],"source":["# Sélectionner un échantillon aléatoire\n","sample_data = data.sample(n=5000, random_state=42)\n","sample_data = sample_data.reset_index()"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":1000},"executionInfo":{"elapsed":234,"status":"ok","timestamp":1733502502441,"user":{"displayName":"Audrey Saussaye","userId":"13741928634988018064"},"user_tz":-60},"id":"vKT_SIO6zIVf","outputId":"e9a179f2-257c-4afc-8a2e-d5050f047b41"},"outputs":[{"data":{"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"sample_data"},"text/html":["\n","  <div id=\"df-a7380b36-7f08-4117-b147-8c753ce51aa8\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>index</th>\n","      <th>budget</th>\n","      <th>revenue</th>\n","      <th>production_companies_name</th>\n","      <th>production_countries</th>\n","      <th>homepage</th>\n","      <th>imdb_id</th>\n","      <th>overview</th>\n","      <th>popularity</th>\n","      <th>poster_path</th>\n","      <th>...</th>\n","      <th>33.0</th>\n","      <th>34.0</th>\n","      <th>35.0</th>\n","      <th>36.0</th>\n","      <th>37.0</th>\n","      <th>38.0</th>\n","      <th>39.0</th>\n","      <th>actor1</th>\n","      <th>actor2</th>\n","      <th>actor3</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>2734</td>\n","      <td>25000000</td>\n","      <td>40452643</td>\n","      <td>['Lionsgate', 'Mosaic Media Group', 'Fierce Entertainment', 'Current Entertainment', 'Rogue Films']</td>\n","      <td>['US', 'CA']</td>\n","      <td>NaN</td>\n","      <td>tt0499556</td>\n","      <td>FBI agent Jack Crawford is out for revenge when his partner is killed and all clues point to the mysterious assassin Rogue. But when Rogue turns up years later to take care of some unfinished business, he triggers a violent clash of rival gangs. Will the truth come out before it's too late? And when the dust settles, who will remain standing?</td>\n","      <td>27.007</td>\n","      <td>/scFc8RD4sFxB2x0eIOaymphMnYh.jpg</td>\n","      <td>...</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>15763</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>['Toei Company', 'Toei Studios Kyoto']</td>\n","      <td>['JP']</td>\n","      <td>NaN</td>\n","      <td>tt0186939</td>\n","      <td>A cynical samurai is left as the sole survivor to fulfil a plot to assassinate the puppet of a villain intent on usurping the shogunate in the 17th century.\\r\\n A Shogunate Elder connives to rule Japan by making his puppet, the Shogun's brother Tsunashige, the next Shogun. The best strategist in Japan, Yamaga, leads a plot to stop the Elder, but his cabal is betrayed and most of the conspirators are captured and tortured.</td>\n","      <td>3.161</td>\n","      <td>/19qWczhr7f0uk1iPCNLNhTffSJX.jpg</td>\n","      <td>...</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2168</td>\n","      <td>0</td>\n","      <td>113164</td>\n","      <td>['Golden Way Films Ltd.', 'Paragon Films Ltd.']</td>\n","      <td>['HK']</td>\n","      <td>NaN</td>\n","      <td>tt0089374</td>\n","      <td>Officer Chan Ka Kui manages to put a major Hong Kong drug dealer behind the bars practically alone, after a shooting and an impressive chase inside a slum. Now, he must protect the boss' secretary, Selina, who will testify against the gangster in court.</td>\n","      <td>14.865</td>\n","      <td>/1ttiBVbzQl9eQ640JnNPHwfm7EZ.jpg</td>\n","      <td>...</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>5843</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>['Ziegler Film', 'Tobis Film', 'Babelsberg Film', 'Gretchenfilm', 'RBB', 'ARD Degeto', 'WDR', 'ARTE', 'ARTE', 'MDR']</td>\n","      <td>['DE']</td>\n","      <td>NaN</td>\n","      <td>tt11864074</td>\n","      <td>It's 1989 in East Berlin: Suzie is kicked out of school shortly before she graduates from high school and has to defend herself as a worker in the cable factory. However, a randomly taken photo leads them to the fashion world of the GDR. The editor-in-chief Elsa Wilbrodt put them on the cover of Sibylle, the fashion magazine of the GDR. In the Berlin underground scene she made the acquaintance of the gay fashion designer Rudi and the photographer Coyote. Suzie must decide if she's brave enough to leave the old strands behind forever.</td>\n","      <td>7.457</td>\n","      <td>/aPCciODmLCQvdVdihd7mvl6sZDB.jpg</td>\n","      <td>...</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>8629</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>['Lunar Pictures', 'Screen Ireland', 'Impact Partners']</td>\n","      <td>['IE', 'US']</td>\n","      <td>https://www.screenireland.ie/directory/view/8737/shooting-the-mafia</td>\n","      <td>tt9358256</td>\n","      <td>Sicilian photojournalist Letizia Battaglia began a long battle against the ruthless Cosa Nostra when she first photographed the sinister scene of a brutal murder. Documenting the barbaric rule of the Italian Mafia, she was an unwavering witness to its crimes. His art and courage helped end the horrific and bloody reign of the Corleonesi clan.</td>\n","      <td>4.304</td>\n","      <td>/zVMUGzZDAWkLGqBw5APQNB0F4Uw.jpg</td>\n","      <td>...</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>4995</th>\n","      <td>5050</td>\n","      <td>3400000</td>\n","      <td>114000000</td>\n","      <td>['Imaginarium Entertainment Group', 'Fortress Features', 'LD Entertainment']</td>\n","      <td>['US']</td>\n","      <td>http://thecollector-movie.com/</td>\n","      <td>tt0844479</td>\n","      <td>Desperate to repay his debt to his ex-wife, an ex-con plots a heist at his new employer's country home, unaware that a second criminal has also targeted the property, and rigged it with a series of deadly traps.</td>\n","      <td>16.327</td>\n","      <td>/e33HSokiAxhj8ptpAr2xAU4jnd8.jpg</td>\n","      <td>...</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>4996</th>\n","      <td>3354</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>['TOHO']</td>\n","      <td>['JP']</td>\n","      <td>NaN</td>\n","      <td>tt0056443</td>\n","      <td>Toshiro Mifune swaggers and snarls to brilliant comic effect in Kurosawa's tightly paced, beautifully composed \"Sanjuro.\" In this companion piece and sequel to \"Yojimbo,\" jaded samurai Sanjuro helps an idealistic group of young warriors weed out their clan's evil influences, and in the process turns their image of a proper samurai on its ear.</td>\n","      <td>10.955</td>\n","      <td>/zW47oIH3bc3ggmmmzTvKqM4Fqjk.jpg</td>\n","      <td>...</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>4997</th>\n","      <td>22462</td>\n","      <td>40000000</td>\n","      <td>175302354</td>\n","      <td>['Vendian Entertainment', 'Summit Entertainment', 'Cross Creek Pictures', 'IM Global', 'Screen Australia', 'Screen NSW', 'Permut Presentations', 'Pandemonium', 'Demarest Films', 'Lionsgate']</td>\n","      <td>['AU', 'US']</td>\n","      <td>https://www.lionsgate.com/movies/hacksaw-ridge</td>\n","      <td>tt2119532</td>\n","      <td>WWII American Army Medic Desmond T. Doss, who served during the Battle of Okinawa, refuses to kill people and becomes the first Conscientious Objector in American history to receive the Congressional Medal of Honor.</td>\n","      <td>121.525</td>\n","      <td>/jhWbYeUNOA5zAb6ufK6pXQFXqTX.jpg</td>\n","      <td>...</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>4998</th>\n","      <td>1321</td>\n","      <td>70000000</td>\n","      <td>374111707</td>\n","      <td>['Paramount', 'Icon Productions']</td>\n","      <td>['US']</td>\n","      <td>NaN</td>\n","      <td>tt0207201</td>\n","      <td>Advertising executive Nick Marshall is as cocky as they come, but what happens to a chauvinistic guy when he can suddenly hear what women are thinking? Nick gets passed over for a promotion, but after an accident enables him to hear women's thoughts, he puts his newfound talent to work against Darcy, his new boss, who seems to be infatuated with him.</td>\n","      <td>18.800</td>\n","      <td>/n5NOxrcgeiCxvEn47FG9bvlHNsV.jpg</td>\n","      <td>...</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>4999</th>\n","      <td>10544</td>\n","      <td>135000000</td>\n","      <td>467989645</td>\n","      <td>['Paramount', 'Allspark Pictures', 'Bay Films', 'di Bonaventura Pictures', 'Tom DeSanto/Don Murphy Production']</td>\n","      <td>['US']</td>\n","      <td>http://bumblebeemovie.com</td>\n","      <td>tt4701182</td>\n","      <td>On the run in the year 1987, Bumblebee finds refuge in a junkyard in a small Californian beach town. Charlie, on the cusp of turning 18 and trying to find her place in the world, discovers Bumblebee, battle-scarred and broken.  When Charlie revives him, she quickly learns this is no ordinary yellow VW bug.</td>\n","      <td>47.384</td>\n","      <td>/fw02ONlDhrYjTSZV8XO6hhU3ds3.jpg</td>\n","      <td>...</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>5000 rows × 71 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-a7380b36-7f08-4117-b147-8c753ce51aa8')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-a7380b36-7f08-4117-b147-8c753ce51aa8 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-a7380b36-7f08-4117-b147-8c753ce51aa8');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-4033abf8-d203-4f61-8ec3-f3e770394705\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-4033abf8-d203-4f61-8ec3-f3e770394705')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-4033abf8-d203-4f61-8ec3-f3e770394705 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_aac6ce00-2ae9-4c00-a0d2-bee4a6a73bcf\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('sample_data')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_aac6ce00-2ae9-4c00-a0d2-bee4a6a73bcf button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('sample_data');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"text/plain":["      index     budget    revenue  \\\n","0      2734   25000000   40452643   \n","1     15763          0          0   \n","2      2168          0     113164   \n","3      5843          0          0   \n","4      8629          0          0   \n","...     ...        ...        ...   \n","4995   5050    3400000  114000000   \n","4996   3354          0          0   \n","4997  22462   40000000  175302354   \n","4998   1321   70000000  374111707   \n","4999  10544  135000000  467989645   \n","\n","                                                                                                                                                                           production_companies_name  \\\n","0                                                                                                ['Lionsgate', 'Mosaic Media Group', 'Fierce Entertainment', 'Current Entertainment', 'Rogue Films']   \n","1                                                                                                                                                             ['Toei Company', 'Toei Studios Kyoto']   \n","2                                                                                                                                                    ['Golden Way Films Ltd.', 'Paragon Films Ltd.']   \n","3                                                                               ['Ziegler Film', 'Tobis Film', 'Babelsberg Film', 'Gretchenfilm', 'RBB', 'ARD Degeto', 'WDR', 'ARTE', 'ARTE', 'MDR']   \n","4                                                                                                                                            ['Lunar Pictures', 'Screen Ireland', 'Impact Partners']   \n","...                                                                                                                                                                                              ...   \n","4995                                                                                                                    ['Imaginarium Entertainment Group', 'Fortress Features', 'LD Entertainment']   \n","4996                                                                                                                                                                                        ['TOHO']   \n","4997  ['Vendian Entertainment', 'Summit Entertainment', 'Cross Creek Pictures', 'IM Global', 'Screen Australia', 'Screen NSW', 'Permut Presentations', 'Pandemonium', 'Demarest Films', 'Lionsgate']   \n","4998                                                                                                                                                               ['Paramount', 'Icon Productions']   \n","4999                                                                                 ['Paramount', 'Allspark Pictures', 'Bay Films', 'di Bonaventura Pictures', 'Tom DeSanto/Don Murphy Production']   \n","\n","     production_countries  \\\n","0            ['US', 'CA']   \n","1                  ['JP']   \n","2                  ['HK']   \n","3                  ['DE']   \n","4            ['IE', 'US']   \n","...                   ...   \n","4995               ['US']   \n","4996               ['JP']   \n","4997         ['AU', 'US']   \n","4998               ['US']   \n","4999               ['US']   \n","\n","                                                                 homepage  \\\n","0                                                                     NaN   \n","1                                                                     NaN   \n","2                                                                     NaN   \n","3                                                                     NaN   \n","4     https://www.screenireland.ie/directory/view/8737/shooting-the-mafia   \n","...                                                                   ...   \n","4995                                       http://thecollector-movie.com/   \n","4996                                                                  NaN   \n","4997                       https://www.lionsgate.com/movies/hacksaw-ridge   \n","4998                                                                  NaN   \n","4999                                            http://bumblebeemovie.com   \n","\n","         imdb_id  \\\n","0      tt0499556   \n","1      tt0186939   \n","2      tt0089374   \n","3     tt11864074   \n","4      tt9358256   \n","...          ...   \n","4995   tt0844479   \n","4996   tt0056443   \n","4997   tt2119532   \n","4998   tt0207201   \n","4999   tt4701182   \n","\noverview  \\\n","0                                                                                                                                                                                                        FBI agent Jack Crawford is out for revenge when his partner is killed and all clues point to the mysterious assassin Rogue. But when Rogue turns up years later to take care of some unfinished business, he triggers a violent clash of rival gangs. Will the truth come out before it's too late? And when the dust settles, who will remain standing?   \n","1                                                                                                                       A cynical samurai is left as the sole survivor to fulfil a plot to assassinate the puppet of a villain intent on usurping the shogunate in the 17th century.\\r\\n A Shogunate Elder connives to rule Japan by making his puppet, the Shogun's brother Tsunashige, the next Shogun. The best strategist in Japan, Yamaga, leads a plot to stop the Elder, but his cabal is betrayed and most of the conspirators are captured and tortured.   \n","2                                                                                                                                                                                                                                                                                                   Officer Chan Ka Kui manages to put a major Hong Kong drug dealer behind the bars practically alone, after a shooting and an impressive chase inside a slum. Now, he must protect the boss' secretary, Selina, who will testify against the gangster in court.   \n","3     It's 1989 in East Berlin: Suzie is kicked out of school shortly before she graduates from high school and has to defend herself as a worker in the cable factory. However, a randomly taken photo leads them to the fashion world of the GDR. The editor-in-chief Elsa Wilbrodt put them on the cover of Sibylle, the fashion magazine of the GDR. In the Berlin underground scene she made the acquaintance of the gay fashion designer Rudi and the photographer Coyote. Suzie must decide if she's brave enough to leave the old strands behind forever.   \n","4                                                                                                                                                                                                        Sicilian photojournalist Letizia Battaglia began a long battle against the ruthless Cosa Nostra when she first photographed the sinister scene of a brutal murder. Documenting the barbaric rule of the Italian Mafia, she was an unwavering witness to its crimes. His art and courage helped end the horrific and bloody reign of the Corleonesi clan.   \nn","4995                                                                                                                                                                                                                                                                                                                                          Desperate to repay his debt to his ex-wife, an ex-con plots a heist at his new employer's country home, unaware that a second criminal has also targeted the property, and rigged it with a series of deadly traps.   \n","4996                                                                                                                                                                                                     Toshiro Mifune swaggers and snarls to brilliant comic effect in Kurosawa's tightly paced, beautifully composed \"Sanjuro.\" In this companion piece and sequel to \"Yojimbo,\" jaded samurai Sanjuro helps an idealistic group of young warriors weed out their clan's evil influences, and in the process turns their image of a proper samurai on its ear.   \n","4997                                                                                                                                                                                                                                                                                                                                      WWII American Army Medic Desmond T. Doss, who served during the Battle of Okinawa, refuses to kill people and becomes the first Conscientious Objector in American history to receive the Congressional Medal of Honor.   \n","4998                                                                                                                                                                                             Advertising executive Nick Marshall is as cocky as they come, but what happens to a chauvinistic guy when he can suddenly hear what women are thinking? Nick gets passed over for a promotion, but after an accident enables him to hear women's thoughts, he puts his newfound talent to work against Darcy, his new boss, who seems to be infatuated with him.   \n","4999                                                                                                                                                                                                                                          On the run in the year 1987, Bumblebee finds refuge in a junkyard in a small Californian beach town. Charlie, on the cusp of turning 18 and trying to find her place in the world, discovers Bumblebee, battle-scarred and broken.  When Charlie revives him, she quickly learns this is no ordinary yellow VW bug.   \n","\n","      popularity                       poster_path  ... 33.0  34.0 35.0 36.0  \\\n","0         27.007  /scFc8RD4sFxB2x0eIOaymphMnYh.jpg  ...  NaN   NaN  NaN  NaN   \n","1          3.161  /19qWczhr7f0uk1iPCNLNhTffSJX.jpg  ...  NaN   NaN  NaN  NaN   \n","2         14.865  /1ttiBVbzQl9eQ640JnNPHwfm7EZ.jpg  ...  NaN   NaN  NaN  NaN   \n","3          7.457  /aPCciODmLCQvdVdihd7mvl6sZDB.jpg  ...  NaN   NaN  NaN  NaN   \n","4          4.304  /zVMUGzZDAWkLGqBw5APQNB0F4Uw.jpg  ...  NaN   NaN  NaN  NaN   \n","...          ...                               ...  ...  ...   ...  ...  ...   \n","4995      16.327  /e33HSokiAxhj8ptpAr2xAU4jnd8.jpg  ...  NaN   NaN  NaN  NaN   \n","4996      10.955  /zW47oIH3bc3ggmmmzTvKqM4Fqjk.jpg  ...  NaN   NaN  NaN  NaN   \n","4997     121.525  /jhWbYeUNOA5zAb6ufK6pXQFXqTX.jpg  ...  NaN   NaN  NaN  NaN   \n","4998      18.800  /n5NOxrcgeiCxvEn47FG9bvlHNsV.jpg  ...  NaN   NaN  NaN  NaN   \n","4999      47.384  /fw02ONlDhrYjTSZV8XO6hhU3ds3.jpg  ...  NaN   NaN  NaN  NaN   \n","\n","     37.0 38.0  39.0  actor1 actor2  actor3  \n","0     NaN  NaN   NaN     NaN    NaN     NaN  \n","1     NaN  NaN   NaN     NaN    NaN     NaN  \n","2     NaN  NaN   NaN     NaN    NaN     NaN  \n","3     NaN  NaN   NaN     NaN    NaN     NaN  \n","4     NaN  NaN   NaN     NaN    NaN     NaN  \n","...   ...  ...   ...     ...    ...     ...  \n","4995  NaN  NaN   NaN     NaN    NaN     NaN  \n","4996  NaN  NaN   NaN     NaN    NaN     NaN  \n","4997  NaN  NaN   NaN     NaN    NaN     NaN  \n","4998  NaN  NaN   NaN     NaN    NaN     NaN  \n","4999  NaN  NaN   NaN     NaN    NaN     NaN  \n","\n","[5000 rows x 71 columns]"]},"execution_count":36,"metadata":{},"output_type":"execute_result"}],"source":["sample_data"]},{"cell_type":"markdown","metadata":{"id":"RRUTtGS5HdL6"},"source":["# **Création du modèle et des colonnes Voisins**"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"4dgVXrXSFP41"},"outputs":[],"source":["\n","# Sélection des variables indépendantes\n","\n","sample_data['autre_prod_countries'] = sample_data['autre_prod_countries'].factorize()[0]\n","sample_data['genres_'] = sample_data['genres'].factorize()[0]\n","sample_data['directors'] = sample_data['directors'].factorize()[0]\n","sample_data['actor1_'] = sample_data['actor1'].factorize()[0]\n","sample_data['actor2_'] = sample_data['actor2'].factorize()[0]\n","sample_data['actor3_'] = sample_data['actor3'].factorize()[0]\n","\n","X = sample_data[['isAdult','genres_','autre_prod_countries', 'directors', 'actor1_','actor2_','actor3_']]\n","\n","scaler = RobustScaler()\n","X_scaled = scaler.fit_transform(sample_data[['isAdult','genres_','autre_prod_countries', 'directors', 'actor1_','actor2_','actor3_']])\n","\n","Voisins = 4\n","\n","pca = PCA(n_components=7) ## je commence par le nombre de colonnes\n","pca.fit_transform(X_scaled).shape\n","# Calculer le pourcentage de variance expliquée par chaque composante\n","explained_variance_ratio = pca.explained_variance_ratio_\n","# Calculer le pourcentage de variance cumulée\n","cumulative_variance_ratio = np.cumsum(explained_variance_ratio)\n","# Trouver le nombre de composantes pour atteindre 99% de variance cumulée\n","num_components = np.argmax(cumulative_variance_ratio >= 0.99) + 1\n","pca = PCA(n_components=num_components)\n","X_reduced = pca.fit_transform(X_scaled)\n","knn = NearestNeighbors(n_neighbors=Voisins)\n","knn.fit(X_reduced)\n","distances, indices = knn.kneighbors(X_reduced)\n","to_add = pd.DataFrame(indices)\n","to_add.rename(columns={to_add.columns[0]: 'Voisin1'}, inplace=True)\n","to_add.rename(columns={to_add.columns[1]: 'Voisin2'}, inplace=True)\n","to_add.rename(columns={to_add.columns[2]: 'Voisin3'}, inplace=True)\n","to_add.rename(columns={to_add.columns[3]: 'Voisin4'}, inplace=True)\n","to_add['nom_film1'] = to_add['Voisin1'].map(data['title'])\n","to_add['nom_film2'] = to_add['Voisin2'].map(data['title'])\n","to_add['nom_film3'] = to_add['Voisin3'].map(data['title'])\n","to_add['nom_film4'] = to_add['Voisin4'].map(data['title'])\n","sample_data = sample_data.join(to_add)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"yDeXAKXeMj5m"},"outputs":[],"source":["sample_data.loc[:,['imdb_id','homepage','overview','popularity','poster_path','spoken_languages','video','title','language','isAdult','startYear','runtimeMinutes','genres','directors','writers','averageRating','actor1','actor2','actor3','Voisin1','Voisin2','Voisin3','Voisin4']].to_csv('movies_with_reco.csv', index=False)"]},{"cell_type":"markdown","source":["# **Rien à voir - Tips pour lire un .*zip**"],"metadata":{"id":"nNUjNhf6OU-A"}},{"cell_type":"code","execution_count":null,"metadata":{"id":"y44jGgR4D4vG"},"outputs":[],"source":["import requests\n","import zipfile\n","import pandas as pd\n","\n","# Télécharger le fichier ZIP\n","url = \"https://raw.githubusercontent.com/PikaChou82/Magma_Analytics/refs/heads/main/Datasets/series_finals.zip\"\n","response = requests.get(url)\n","open('series_finals.zip', 'wb').write(response.content)\n","\n","# Ouvrir le fichier ZIP et extraire le CSV\n","with zipfile.ZipFile('series_finals.zip', 'r') as zip_ref:\n","    zip_ref.extractall('temp')\n","\n","# Lire le CSV dans un DataFrame\n","df = pd.read_csv('temp/series_finals.csv')\n","\n","# Afficher les premières lignes\n","print(df.head())"]}],"metadata":{"colab":{"provenance":[{"file_id":"1_cZTHrwi8rdINn-Gji05xSWeBYV4BFaE","timestamp":1732981521594},{"file_id":"1h1RWH_lh1293TUikLKvOgxkMnZ-NgtHQ","timestamp":1732975122603},{"file_id":"1VhaTvWQQ8pT2GSY0cXNtGdHoBnpEhRxl","timestamp":1732888441997},{"file_id":"1drCeQpbZkxDOQDYEVXubuYzeravc9Sla","timestamp":1657559645805}],"toc_visible":true},"kernelspec":{"display_name":"Python 3","name":"python3"},"language_info":{"name":"python"}},"nbformat":4,"nbformat_minor":0}